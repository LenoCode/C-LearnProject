// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SqlTransfDataAccess.Context;

#nullable disable

namespace SqlTransfDataAccess.Migrations
{
    [DbContext(typeof(ClientDatabaseContext))]
    [Migration("20230901123808_AddedConfigurations")]
    partial class AddedConfigurations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SqlTransfDataAccess.Models.ClientDatabaseModels.Configuration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("DbInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("DbInfoId");

                    b.ToTable("db_configuration");
                });

            modelBuilder.Entity("SqlTransfDataAccess.Models.ClientDatabaseModels.Database", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("DbId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("client_database");
                });

            modelBuilder.Entity("SqlTransfDataAccess.Models.ClientDatabaseModels.Configuration", b =>
                {
                    b.HasOne("SqlTransfDataAccess.Models.ClientDatabaseModels.Database", "DbInfo")
                        .WithMany("DbConfigurations")
                        .HasForeignKey("DbInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DbInfo");
                });

            modelBuilder.Entity("SqlTransfDataAccess.Models.ClientDatabaseModels.Database", b =>
                {
                    b.Navigation("DbConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
